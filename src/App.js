import logo from './logo.svg';
// import './App.css';
import React, { use, useEffect, useState } from 'react';
import TodoFeature from './features/Todo';
import AlbumFeature from './features/Album';
import ColorBox from './components/ColorBox';
import Counter from './components/Counter';
import TodoList from './components/TodoList';
import TodoForm from './components/TodoForm';
import PostList from './components/PostList';
import Pagination from './components/Pagination';
import queryString from 'query-string';
import PostFiltersForm from './components/PostFiltersForm';
import Clock from './components/Clock';
import BetterClock from './components/BetterClock';

function One() {
  return (<div>
    <h2>So 1 tap 1</h2>
    <h3>So 1 tap 2</h3>
  </div>)
}

var Two = function () {
  return (<div>
    <h3>So 2 tap 1</h3>
    <h3>So 2 tap 2</h3>
  </div>)
}
var Three = () => (<div>
  <h3>So 3 tap 1</h3>
  <h3>So 3 tap 2</h3>
</div>)

function App() {
  const [todoList, setTodoList] = useState([
    { id: 1, title: 'I love Easy Frontend! üòç' },
    { id: 2, title: 'We love Easy Frontend! üòé' },
    { id: 3, title: 'They love Easy Frontend! üöÄ' },
  ]);

  // Gi·∫£ ƒë·ªãnh b·∫°n c√≥ m·ªôt state ƒë·ªÉ l∆∞u tr·ªØ danh s√°ch b√†i vi·∫øt
  const [postList, setPostList] = useState([]);
  const [pagination, setPagination] = useState({
    _page: 1,
    _limit: 10,
    _totalRows: 11,
  });

  const [filters, setfilters] = useState({
    _page: 1,
    _limit: 10,
    title_like: 'quis',
  });
  useEffect(() => {
    async function fetchPostList() {
      // Logic ƒë·ªÉ fetch danh s√°ch b√†i vi·∫øt t·ª´ API
      try {
        const paramsString = queryString.stringify(filters); // Chuy·ªÉn ƒë·ªïi filters th√†nh chu·ªói query
        const requestUrl = `http://js-post-api.herokuapp.com/api/posts?${paramsString}`; // T·∫°o URL v·ªõi query string
        const response = await fetch(requestUrl);
        const responseJSON = await response.json();
        console.log({ responseJSON }); // In ra d·ªØ li·ªáu JSON nh·∫≠n ƒë∆∞·ª£c

        const { data, pagination } = responseJSON; // L·∫•y tr∆∞·ªùng 'data' t·ª´ responseJSON
        setPostList(data); // C·∫≠p nh·∫≠t state `postList` v·ªõi d·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c
        setPagination(pagination); // C·∫≠p nh·∫≠t state `pagination` v·ªõi d·ªØ li·ªáu ph√¢n trang
      } catch (error) {
        console.log('Failed to fetch post list: ', error.message); // X·ª≠ l√Ω l·ªói n·∫øu c√≥
      }
    }
    console.log('PostList effect ');
    fetchPostList(); // G·ªçi h√†m fetchPostList khi component mount

    // TODO: B·∫°n c√≥ th·ªÉ th√™m dependency array v√†o useEffect n·∫øu c·∫ßn ch·∫°y l·∫°i khi c√≥ s·ª± thay ƒë·ªïi
    // V√≠ d·ª•: useEffect(() => { ... }, [someDependency]);
    // N·∫øu dependency array l√† r·ªóng (`[]`), n√≥ s·∫Ω ch·ªâ ch·∫°y m·ªôt l·∫ßn sau l·∫ßn render ƒë·∫ßu ti√™n.
  }, [filters]); // Dependency array r·ªóng, h√†m n√†y s·∫Ω ch·ªâ ch·∫°y m·ªôt l·∫ßn khi component mount

  useEffect(() => {
    console.log('TODO list effect ');

  });

  function handlePageChange(newPage) {
    console.log('New page: ', newPage);
    setfilters({
      ...filters,
      _page: newPage
    });
  }

  function handleTodoClick(todo) {
    console.log(todo);
    const index = todoList.findIndex(x => x.id === todo.id);
    if (index < 0) return;

    const newTodoList = [...todoList];
    newTodoList.splice(index, 1);
    setTodoList(newTodoList);
  }
  function handleTodoFormSubmit(formValues) {
    console.log("todo form submit", formValues);
    const newTodo = {
      id: todoList.length + 1,
      title: formValues.title,
    }
    const newTodoList = [...todoList];
    newTodoList.push(newTodo);
    setTodoList(newTodoList);
  }
  function handleFiltersChange(newFilters) {
    console.log('New filters: ', newFilters);
    setfilters({
      ...filters,
      _page: 1,
      title_like: newFilters.searchTerm,
    });
  }

  const [showClock, setShowClock] = useState(true);
  return (
    <div className="app">
      <h1>React hooks - Clock</h1>
      {/* <TodoForm onSubmit={handleTodoFormSubmit} ></TodoForm> */}
      {/* <TodoList todos={todoList} onTodoClick={handleTodoClick} /> */}

      {/* <PostFiltersForm onSubmit={handleFiltersChange}></PostFiltersForm>
      <PostList posts={postList} ></PostList>
      <Pagination pagination={pagination} onPageChange={handlePageChange}></Pagination> */}
      {showClock && <Clock />}
      <BetterClock />
      <button onClick={() => setShowClock(!showClock)}>
        {showClock ? 'Hide Clock' : 'Show Clock'}
      </button>
    </div>
  );
}

// function App() {
//   const age = 18;
//   const name = 'TTT';
//   const isFemale = true;
//   const student = {
//     name: 'Easy Frontend'
//   };
//   const colorList = ['red', 'green', 'blue'];

//   return (
//     <div className="App">
//       {/* <header className="App-header">
//         <img src={logo} className="App-logo" alt="logo" />
//         <p>Xin ch√†o {name} - {age} - {isFemale ? 'Female' : 'Male'}</p>
//         {isFemale ? <p>Female</p> : <p>Male</p>}
//         {isFemale &&
//           (<>
//             <p>Female 1</p>
//             <p>Female 2</p>
//             <p>Female 3</p>
//           </>)
//         }
//         {isFemale &&
//           (<div>
//             <p>Female 1</p>
//             <p>Female 2</p>
//             <p>Female 3</p>
//           </div>)
//         }
//         {isFemale &&
//           (<React.Fragment>
//             <p>Female 1</p>
//             <p>Female 2</p>
//             <p>Female 3</p>
//           </React.Fragment>)
//         }
//         {!isFemale && <p>Male</p>}

//         <p>student.name: {student.name}</p>

//         <ol>
//           {colorList.map(color => <li style={{ color }}>{color}</li>)}
//         </ol>
//       </header>
//        */}

//       {/* <TodoFeature /> */}
//       {/* <AlbumFeature /> */}
//       <ColorBox />
//       {/* <Counter /> */}


//     </div>
//   );
// }


export default App;
